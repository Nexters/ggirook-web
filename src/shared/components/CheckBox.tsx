import { type SVGAttributes } from 'react';
import { cn } from '@/shared/utils/cn';

interface TodoCheckBoxProps extends SVGAttributes<SVGSVGElement> {
  isChecked: boolean;
}

export function CheckBox({ isChecked, ...rest }: TodoCheckBoxProps) {
  return (
    <svg
      role='checkbox'
      aria-checked={isChecked}
      className='group cursor-pointer *:transition-all'
      width='24'
      height='23'
      viewBox='0 0 24 23'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...rest}
    >
      <path
        d='M0 11.1916C0 4.46479 5.13803 0.104233 12 0.104233C18.862 0.104233 24 4.46479 24 11.1916C24 17.9521 18.862 22.3127 12 22.3127C5.13803 22.3127 0 17.9859 0 11.1916Z'
        className={cn('fill-grayscale-100 group-hover:fill-grayscale-700 group-focus:fill-grayscale-700', {
          'fill-black': isChecked,
        })}
      />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M4.75403 10.2041L4.92134 9.17632C6.96107 9.61973 10.1113 11.8729 11.9876 13.6276C13.8639 11.8729 17.0142 9.61973 19.0539 9.17632L19.2212 10.2041C17.3329 10.6583 14.0344 12.9051 12.2418 14.6977L12.2407 14.6967L11.9541 14.9833C11.914 14.9231 11.7903 14.7604 11.6047 14.5707C9.78664 12.8005 6.59795 10.6476 4.75403 10.2041Z'
        className={cn('fill-grayscale-400 group-hover:fill-grayscale-400 group-focus:fill-grayscale-400', {
          'fill-accent-500': isChecked,
        })}
      />
      <path
        d='M4.92134 9.17632L5.02756 8.68773L4.51253 8.57576L4.42784 9.09598L4.92134 9.17632ZM4.75403 10.2041L4.26052 10.1238L4.18597 10.5817L4.63711 10.6902L4.75403 10.2041ZM11.9876 13.6276L11.6461 13.9928L11.9876 14.3122L12.3291 13.9928L11.9876 13.6276ZM19.0539 9.17632L19.5474 9.09598L19.4627 8.57576L18.9477 8.68773L19.0539 9.17632ZM19.2212 10.2041L19.3381 10.6902L19.7893 10.5817L19.7147 10.1238L19.2212 10.2041ZM12.2418 14.6977L11.8882 15.0513L12.2418 15.4048L12.5953 15.0513L12.2418 14.6977ZM12.2407 14.6967L12.5943 14.3431L12.2407 13.9896L11.8872 14.3431L12.2407 14.6967ZM11.9541 14.9833L11.5381 15.2607L11.8764 15.7681L12.3076 15.3369L11.9541 14.9833ZM11.6047 14.5707L11.9622 14.2209L11.9535 14.2124L11.6047 14.5707ZM4.42784 9.09598L4.26052 10.1238L5.24753 10.2844L5.41485 9.25665L4.42784 9.09598ZM12.3291 13.2624C11.3702 12.3656 10.0911 11.346 8.79009 10.4922C7.5013 9.64644 6.14062 8.9297 5.02756 8.68773L4.81513 9.6649C5.74179 9.86635 6.9761 10.4979 8.24144 11.3282C9.49454 12.1506 10.7287 13.1349 11.6461 13.9928L12.3291 13.2624ZM18.9477 8.68773C17.8346 8.9297 16.474 9.64644 15.1852 10.4922C13.8841 11.346 12.605 12.3656 11.6461 13.2624L12.3291 13.9928C13.2465 13.1349 14.4807 12.1506 15.7338 11.3282C16.9991 10.4979 18.2335 9.86635 19.1601 9.6649L18.9477 8.68773ZM19.7147 10.1238L19.5474 9.09598L18.5604 9.25665L18.7277 10.2844L19.7147 10.1238ZM12.5953 15.0513C13.4625 14.1841 14.7071 13.1952 15.9698 12.3671C17.2439 11.5315 18.4812 10.8963 19.3381 10.6902L19.1043 9.71797C18.0729 9.96603 16.7169 10.6813 15.4214 11.5309C14.1147 12.3879 12.8137 13.4187 11.8882 14.3442L12.5953 15.0513ZM11.8872 15.0502L11.8882 15.0513L12.5953 14.3442L12.5943 14.3431L11.8872 15.0502ZM12.3076 15.3369L12.5943 15.0502L11.8872 14.3431L11.6005 14.6297L12.3076 15.3369ZM11.2473 14.9203C11.4145 15.0913 11.5177 15.2301 11.5381 15.2607L12.3701 14.706C12.3103 14.6162 12.1661 14.4296 11.9621 14.221L11.2473 14.9203ZM4.63711 10.6902C5.4732 10.8913 6.67278 11.5014 7.91675 12.3092C9.14938 13.1097 10.3743 14.0706 11.2559 14.9289L11.9535 14.2124C11.017 13.3006 9.73858 12.3 8.46138 11.4705C7.19551 10.6485 5.87878 9.96036 4.87095 9.71797L4.63711 10.6902Z'
        className={cn('fill-grayscale-400 group-hover:fill-grayscale-400 group-focus:fill-grayscale-400', {
          'fill-accent-500': isChecked,
        })}
      />
    </svg>
  );
}
